BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//OpenAI//Rust Roadmap//EN
CALSCALE:GREGORIAN
METHOD:PUBLISH

#############################################
# WEEK 1
#############################################

BEGIN:VEVENT
UID:rust-roadmap-week1-day1
DTSTAMP:20250226T000000Z
DTSTART:<MON1>T093000
DTEND:<MON1>T113000
SUMMARY:Week 1 - Day 1
DESCRIPTION:Topics: Installing Rust, setting up the environment, first project.\nExercises:\n1) Easy - Hello World\n2) Medium - Simple input reading\n3) Advanced - Passing ownership in a function
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week1-day2
DTSTAMP:20250226T000000Z
DTSTART:<TUE1>T150000
DTEND:<TUE1>T170000
SUMMARY:Week 1 - Day 2
DESCRIPTION:Topics: Cargo commands (build/run/test), basic guess-the-number game.\nExercises:\n1) Easy - Print messages based on user input\n2) Medium - Guess-the-number with random crate\n3) Advanced - Handle invalid input robustly
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week1-day3
DTSTAMP:20250226T000000Z
DTSTART:<WED1>T093000
DTEND:<WED1>T113000
SUMMARY:Week 1 - Day 3
DESCRIPTION:Topics: Variables, mutability, data types (int, float, bool, char, array, tuple).\nExercises:\n1) Easy - Experiment with let vs let mut\n2) Medium - Convert input string to number and do basic math\n3) Advanced - Store multiple data types and print them
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week1-day4
DTSTAMP:20250226T000000Z
DTSTART:<THU1>T093000
DTEND:<THU1>T113000
SUMMARY:Week 1 - Day 4
DESCRIPTION:Topics: Functions (fn), parameters, return types, control flow (if/else, match, loops).\nExercises:\n1) Easy - Create a simple function and print its result\n2) Medium - Implement a small calculator\n3) Advanced - Combine loops and match in a short CLI program
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week1-day5
DTSTAMP:20250226T000000Z
DTSTART:<FRI1>T093000
DTEND:<FRI1>T113000
SUMMARY:Week 1 - Day 5
DESCRIPTION:Recap & Exercises:\n1) Easy - Sort a list of 3 numbers\n2) Medium - Expand the guess-the-number game with new features\n3) Advanced - Make a menu-based CLI managing a small list/array
END:VEVENT

#############################################
# WEEK 2
#############################################

BEGIN:VEVENT
UID:rust-roadmap-week2-day1
DTSTAMP:20250226T000000Z
DTSTART:<MON2>T093000
DTEND:<MON2>T113000
SUMMARY:Week 2 - Day 1
DESCRIPTION:Topics: Ownership basics, stack vs heap, moves.\nExercises:\n1) Easy - Function that takes ownership of a String and prints it\n2) Medium - Function that returns a String after modifying it\n3) Advanced - Compare passing by value vs passing by reference
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week2-day2
DTSTAMP:20250226T000000Z
DTSTART:<TUE2>T150000
DTEND:<TUE2>T170000
SUMMARY:Week 2 - Day 2
DESCRIPTION:Topics: References, borrowing (immutable vs mutable), slicing.\nExercises:\n1) Easy - Function that sums a slice of i32\n2) Medium - Function that multiplies each element of a mutable slice\n3) Advanced - Interactive input storing integers in a Vec, then passing slices
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week2-day3
DTSTAMP:20250226T000000Z
DTSTART:<WED2>T093000
DTEND:<WED2>T113000
SUMMARY:Week 2 - Day 3
DESCRIPTION:Topics: Lifetimes, basic lifetime annotations in functions.\nExercises:\n1) Easy - Return the first character slice from a string\n2) Medium - Compare two string slices, return the longer\n3) Advanced - Struct holding a reference, ensuring correct lifetimes
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week2-day4
DTSTAMP:20250226T000000Z
DTSTART:<THU2>T093000
DTEND:<THU2>T113000
SUMMARY:Week 2 - Day 4
DESCRIPTION:Topics: More slice operations, pattern matching on slices and references.\nExercises:\n1) Easy - Check if the first character of a string is a vowel or consonant\n2) Medium - Distinguish multiple pattern cases with match\n3) Advanced - Implement a while let Some(x) loop to sum or process items
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week2-day5
DTSTAMP:20250226T000000Z
DTSTART:<FRI2>T093000
DTEND:<FRI2>T113000
SUMMARY:Week 2 - Day 5
DESCRIPTION:Recap & Exercises:\n1) Easy - Small to-do list managing tasks in a Vec\n2) Medium - Functions to add/remove tasks\n3) Advanced - A menu-based CLI for the to-do list, using references and slices
END:VEVENT

#############################################
# WEEK 3
#############################################

BEGIN:VEVENT
UID:rust-roadmap-week3-day1
DTSTAMP:20250226T000000Z
DTSTART:<MON3>T093000
DTEND:<MON3>T113000
SUMMARY:Week 3 - Day 1
DESCRIPTION:Topics: Structs, implementing methods.\nExercises:\n1) Easy - Define a Rectangle struct\n2) Medium - Add an area() method\n3) Advanced - Add a method can_hold() to compare two Rectangles
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week3-day2
DTSTAMP:20250226T000000Z
DTSTART:<TUE3>T150000
DTEND:<TUE3>T170000
SUMMARY:Week 3 - Day 2
DESCRIPTION:Topics: Enums, pattern matching on variants.\nExercises:\n1) Easy - Define an enum for card suits\n2) Medium - Add an enum for card ranks, implement a describe() function\n3) Advanced - Combine suit + rank in a Card struct, describe it
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week3-day3
DTSTAMP:20250226T000000Z
DTSTART:<WED3>T093000
DTEND:<WED3>T113000
SUMMARY:Week 3 - Day 3
DESCRIPTION:Topics: Option, Result, error handling via match.\nExercises:\n1) Easy - Return Option<i32> from a function if input > 10\n2) Medium - Division function returning Result<f64, String>\n3) Advanced - Simulate opening a file returning Result<String, String>
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week3-day4
DTSTAMP:20250226T000000Z
DTSTART:<THU3>T093000
DTEND:<THU3>T113000
SUMMARY:Week 3 - Day 4
DESCRIPTION:Topics: Advanced pattern matching (if let, while let), destructuring.\nExercises:\n1) Easy - if let Some(n) = some_option\n2) Medium - while let Some(x) in a Vec<Option<i32>>\n3) Advanced - Define an enum Message with variants; match them differently
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week3-day5
DTSTAMP:20250226T000000Z
DTSTART:<FRI3>T093000
DTEND:<FRI3>T113000
SUMMARY:Week 3 - Day 5
DESCRIPTION:Recap & Exercises:\n1) Easy - A basic Reservation struct\n2) Medium - An enum for reservation states, method to update state\n3) Advanced - Manage multiple reservations in a Vec, adding, confirming, cancelling
END:VEVENT

#############################################
# WEEK 4
#############################################

BEGIN:VEVENT
UID:rust-roadmap-week4-day1
DTSTAMP:20250226T000000Z
DTSTART:<MON4>T093000
DTEND:<MON4>T113000
SUMMARY:Week 4 - Day 1
DESCRIPTION:Topics: Generics <T> in functions and structs.\nExercises:\n1) Easy - A function returning the first of two parameters\n2) Medium - Find the maximum in a slice of T: PartialOrd + Copy\n3) Advanced - A Pair<T,U> struct with partial ordering logic
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week4-day2
DTSTAMP:20250226T000000Z
DTSTART:<TUE4>T150000
DTEND:<TUE4>T170000
SUMMARY:Week 4 - Day 2
DESCRIPTION:Topics: Traits, implementing custom traits, default methods.\nExercises:\n1) Easy - trait Greeting with a greet() method\n2) Medium - trait Computable for Summation/Multiplication structs\n3) Advanced - Add a default method in the trait that calls compute()
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week4-day3
DTSTAMP:20250226T000000Z
DTSTART:<WED4>T093000
DTEND:<WED4>T113000
SUMMARY:Week 4 - Day 3
DESCRIPTION:Topics: Trait objects with Box<dyn Trait>, dynamic dispatch.\nExercises:\n1) Easy - trait Describable, implemented by two structs, stored in a Vec<Box<dyn Describable>>\n2) Medium - Add a third struct to the same Vec\n3) Advanced - A function that takes &[Box<dyn Describable>] and prints them
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week4-day4
DTSTAMP:20250226T000000Z
DTSTART:<THU4>T093000
DTEND:<THU4>T113000
SUMMARY:Week 4 - Day 4
DESCRIPTION:Topics: Advanced error handling, Result, the ? operator.\nExercises:\n1) Easy - Function read_number() -> Result<i32, ParseIntError>\n2) Medium - Use ? to simplify error propagation\n3) Advanced - read_config(path) -> Result<String, Box<dyn Error>> and match the outcome
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week4-day5
DTSTAMP:20250226T000000Z
DTSTART:<FRI4>T093000
DTEND:<FRI4>T113000
SUMMARY:Week 4 - Day 5
DESCRIPTION:Recap & Exercises:\n1) Easy - Add a simple trait to an existing project\n2) Medium - Generic function transforming a Vec\n3) Advanced - Combine trait objects and Result with possible errors
END:VEVENT

#############################################
# WEEK 5
#############################################

BEGIN:VEVENT
UID:rust-roadmap-week5-day1
DTSTAMP:20250226T000000Z
DTSTART:<MON5>T093000
DTEND:<MON5>T113000
SUMMARY:Week 5 - Day 1
DESCRIPTION:Topics: Collections: Vec, String.\nExercises:\n1) Easy - Create a Vec<String> with 3 elements\n2) Medium - Functions to add/remove an element\n3) Advanced - A small menu to manage strings in a Vec
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week5-day2
DTSTAMP:20250226T000000Z
DTSTART:<TUE5>T150000
DTEND:<TUE5>T170000
SUMMARY:Week 5 - Day 2
DESCRIPTION:Topics: HashMap, insertion, removal, iteration.\nExercises:\n1) Easy - A small dictionary (word->definition)\n2) Medium - Function add_word(map, word, definition)\n3) Advanced - Interactive dictionary with add, search, remove
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week5-day3
DTSTAMP:20250226T000000Z
DTSTART:<WED5>T093000
DTEND:<WED5>T113000
SUMMARY:Week 5 - Day 3
DESCRIPTION:Topics: Iterators (map, filter, fold), iter() vs iter_mut() vs into_iter().\nExercises:\n1) Easy - Print each element of a Vec\n2) Medium - Filter even numbers\n3) Advanced - Sum squares of positive numbers with filter+map+fold
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week5-day4
DTSTAMP:20250226T000000Z
DTSTART:<THU5>T093000
DTEND:<THU5>T113000
SUMMARY:Week 5 - Day 4
DESCRIPTION:Topics: Closures, capturing variables, apply_twice.\nExercises:\n1) Easy - A closure that adds 1 to each element in a Vec\n2) Medium - apply_twice(f, x) calls f(x) twice\n3) Advanced - A closure capturing an external mutable variable
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week5-day5
DTSTAMP:20250226T000000Z
DTSTART:<FRI5>T093000
DTEND:<FRI5>T113000
SUMMARY:Week 5 - Day 5
DESCRIPTION:Recap & Exercises:\n1) Easy - A Vec of (name, grade) pairs, print them\n2) Medium - A HashMap<name, grade> with a search function\n3) Advanced - Compute average, min, max using iterators
END:VEVENT

#############################################
# WEEK 6
#############################################

BEGIN:VEVENT
UID:rust-roadmap-week6-day1
DTSTAMP:20250226T000000Z
DTSTART:<MON6>T093000
DTEND:<MON6>T113000
SUMMARY:Week 6 - Day 1
DESCRIPTION:Topics: Threads with std::thread::spawn, joining, concurrency basics.\nExercises:\n1) Easy - Two threads printing messages\n2) Medium - One thread prints 1..5, the other does something else\n3) Advanced - Add sleep to observe interleaving
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week6-day2
DTSTAMP:20250226T000000Z
DTSTART:<TUE6>T150000
DTEND:<TUE6>T170000
SUMMARY:Week 6 - Day 2
DESCRIPTION:Topics: Channels (mpsc::channel), sending and receiving.\nExercises:\n1) Easy - One thread sends a string, main receives\n2) Medium - Send multiple messages, print as they arrive\n3) Advanced - Multiple producer threads into a single consumer
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week6-day3
DTSTAMP:20250226T000000Z
DTSTART:<WED6>T093000
DTEND:<WED6>T113000
SUMMARY:Week 6 - Day 3
DESCRIPTION:Topics: Mutex, Arc, shared state.\nExercises:\n1) Easy - Arc<Mutex<i32>> for a shared counter\n2) Medium - Add a third thread, confirm final result\n3) Advanced - Simulate a bank account with deposits and withdrawals
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week6-day4
DTSTAMP:20250226T000000Z
DTSTART:<THU6>T093000
DTEND:<THU6>T113000
SUMMARY:Week 6 - Day 4
DESCRIPTION:Topics: More concurrency patterns, chat simulation.\nExercises:\n1) Easy - One sender, one receiver (chat style)\n2) Medium - Multiple participants (threads) sending messages\n3) Advanced - A response mechanism from consumer back to producers
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week6-day5
DTSTAMP:20250226T000000Z
DTSTART:<FRI6>T093000
DTEND:<FRI6>T113000
SUMMARY:Week 6 - Day 5
DESCRIPTION:Recap & Exercises:\n1) Easy - 1 producer, 1 consumer exchanging a few messages\n2) Medium - 2 producers, 1 consumer\n3) Advanced - 2 consumers, gracefully closing all threads
END:VEVENT

#############################################
# WEEK 7
#############################################

BEGIN:VEVENT
UID:rust-roadmap-week7-day1
DTSTAMP:20250226T000000Z
DTSTART:<MON7>T093000
DTEND:<MON7>T113000
SUMMARY:Week 7 - Day 1
DESCRIPTION:Topics: Macros with macro_rules!.\nExercises:\n1) Easy - A simple macro that wraps println!\n2) Medium - Macro accepting a parameter to print\n3) Advanced - Macro generating repeated functions
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week7-day2
DTSTAMP:20250226T000000Z
DTSTART:<TUE7>T150000
DTEND:<TUE7>T170000
SUMMARY:Week 7 - Day 2
DESCRIPTION:Topics: Procedural macros (introduction), derive macros.\nExercises:\n1) Easy - Basic example from official docs\n2) Medium - A custom #[derive(MyTrait)] macro\n3) Advanced - Conditional code generation in a procedural macro
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week7-day3
DTSTAMP:20250226T000000Z
DTSTART:<WED7>T093000
DTEND:<WED7>T113000
SUMMARY:Week 7 - Day 3
DESCRIPTION:Topics: Unsafe Rust, raw pointers, extern "C".\nExercises:\n1) Easy - A small unsafe block with a raw pointer\n2) Medium - Pointer to Box::new(...) and dereference\n3) Advanced - A fictitious extern "C" function
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week7-day4
DTSTAMP:20250226T000000Z
DTSTART:<THU7>T093000
DTEND:<THU7>T113000
SUMMARY:Week 7 - Day 4
DESCRIPTION:Topics: Smart pointers (Box, Rc, RefCell), building a linked list.\nExercises:\n1) Easy - enum List { Node(i32, Box<List>), Empty }\n2) Medium - Implement a length() method\n3) Advanced - insert_head(self, val) to create a new list node
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week7-day5
DTSTAMP:20250226T000000Z
DTSTART:<FRI7>T093000
DTEND:<FRI7>T113000
SUMMARY:Week 7 - Day 5
DESCRIPTION:Recap & Exercises:\n1) Easy - Add a simple macro to an existing codebase\n2) Medium - Use Rc<RefCell<...>> in a shared context\n3) Advanced - Remove unsafe if possible or explain performance tradeoffs
END:VEVENT

#############################################
# WEEK 8
#############################################

BEGIN:VEVENT
UID:rust-roadmap-week8-day1
DTSTAMP:20250226T000000Z
DTSTART:<MON8>T093000
DTEND:<MON8>T113000
SUMMARY:Week 8 - Day 1
DESCRIPTION:Final Project - Planning.\nExercises:\n1) Easy - Brainstorm 2-3 project ideas\n2) Medium - Create a Git repo and README with goals\n3) Advanced - Write a detailed spec of modules and data structures
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week8-day2
DTSTAMP:20250226T000000Z
DTSTART:<TUE8>T150000
DTEND:<TUE8>T170000
SUMMARY:Week 8 - Day 2
DESCRIPTION:Final Project - Project structure, modules.\nExercises:\n1) Easy - Setup src/lib.rs and src/main.rs\n2) Medium - Implement at least one complex function\n3) Advanced - Define traits/structs used across the entire project
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week8-day3
DTSTAMP:20250226T000000Z
DTSTART:<WED8>T093000
DTEND:<WED8>T113000
SUMMARY:Week 8 - Day 3
DESCRIPTION:Final Project - Implementation, concurrency if needed.\nExercises:\n1) Easy - Read data from file or user input\n2) Medium - Error handling with ? operator\n3) Advanced - Add a dedicated thread or consumer/producer logic
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week8-day4
DTSTAMP:20250226T000000Z
DTSTART:<THU8>T093000
DTEND:<THU8>T113000
SUMMARY:Week 8 - Day 4
DESCRIPTION:Final Project - Refactoring, tests, linting.\nExercises:\n1) Easy - Add a simple unit test\n2) Medium - Run cargo fmt/clippy, fix warnings\n3) Advanced - Add integration tests in /tests
END:VEVENT

BEGIN:VEVENT
UID:rust-roadmap-week8-day5
DTSTAMP:20250226T000000Z
DTSTART:<FRI8>T093000
DTEND:<FRI8>T113000
SUMMARY:Week 8 - Day 5
DESCRIPTION:Final Project - Conclusion & publication.\nExercises:\n1) Easy - Update README with build instructions\n2) Medium - Add doc comments and run cargo doc\n3) Advanced - Create a GitHub release and a CONTRIBUTING.md
END:VEVENT

END:VCALENDAR
